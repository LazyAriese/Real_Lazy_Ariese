<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Flappy Bird</title>
<style>
    canvas {
        display: block;
        margin: 0 auto;
        background-color: #70c5ce; /* Sky blue color */
    }
</style>
</head>
<body>
<canvas id="gameCanvas" width="400" height="600"></canvas>
<script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');

    let birdY = canvas.height / 2;
    let birdVelocity = 0;
    const gravity = 0.5;
    const jumpStrength = -10;
    const pipeGap = 150;
    let pipeX = canvas.width;
    let score = 0;
    let gameOver = false; // Flag to track game over state

    function drawBird() {
        // Head
        ctx.beginPath();
        ctx.arc(50, birdY, 20, 0, Math.PI * 2);
        ctx.fillStyle = 'black'; // Changed the fill color to black
        ctx.fill();
        ctx.closePath();

        // Eyes
        ctx.beginPath();
        ctx.arc(45, birdY - 5, 5, 0, Math.PI * 2); // Left eye
        ctx.fillStyle = 'white'; // Eye color
        ctx.fill();
        ctx.closePath();

        ctx.beginPath();
        ctx.arc(55, birdY - 5, 5, 0, Math.PI * 2); // Right eye
        ctx.fillStyle = 'white'; // Eye color
        ctx.fill();
        ctx.closePath();

        // Pupils
        ctx.beginPath();
        ctx.arc(45, birdY - 5, 2, 0, Math.PI * 2); // Left pupil
        ctx.fillStyle = 'black'; // Pupil color
        ctx.fill();
        ctx.closePath();

        ctx.beginPath();
        ctx.arc(55, birdY - 5, 2, 0, Math.PI * 2); // Right pupil
        ctx.fillStyle = 'black'; // Pupil color
        ctx.fill();
        ctx.closePath();
    }

    function drawPipe() {
        ctx.beginPath();
        ctx.rect(pipeX, 0, 50, canvas.height - pipeGap - 100); // Upper pipe
        ctx.fillStyle = 'green';
        ctx.fill();
        ctx.closePath();
        ctx.beginPath();
        ctx.rect(pipeX, canvas.height - pipeGap + 100, 50, canvas.height); // Lower pipe
        ctx.fillStyle = 'green';
        ctx.fill();
        ctx.closePath();
    }

    function moveBird() {
        birdVelocity += gravity;
        birdY += birdVelocity;
    }

    function movePipe() {
        pipeX -= 2;
        if (pipeX + 50 < 0) {
            pipeX = canvas.width;
            score += 10; // Increment score for passing each obstacle
        }
    }

    function drawScore() {
        ctx.fillStyle = 'black';
        ctx.font = '24px Arial';
        ctx.fillText('Score: ' + score, 10, 30);
    }

    function checkCollision() {
        if (birdY - 20 < 0 || birdY + 20 > canvas.height) {
            return true;
        }
        if (pipeX < 70 && pipeX + 50 > 50) {
            if (birdY - 20 < canvas.height - pipeGap - 100 || birdY + 20 > canvas.height - pipeGap + 100) { // Adjusted for obstacle gap
                return true;
            }
        }
        return false;
    }

    function updateGame() {
        if (checkCollision() && !gameOver) { // Check game over state
            gameOver = true; // Set game over flag
            alert('Game over! Your score: ' + score);
            document.location.reload();
        }
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        drawBird();
        moveBird();
        drawPipe();
        movePipe();
        drawScore();
        requestAnimationFrame(updateGame);
    }

    canvas.addEventListener('mousedown', function(event) { // Listen for mouse click
        if (!gameOver) { // Check game over state
            birdVelocity = jumpStrength;
        }
    });

    canvas.addEventListener('touchstart', function(event) { // Listen for touch start
        event.preventDefault(); // Prevent default touch behavior (e.g., scrolling)
        if (!gameOver) { // Check game over state
            birdVelocity = jumpStrength;
        }
    });

    updateGame();
</script>
</body>
</html>
